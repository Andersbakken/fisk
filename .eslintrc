{
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": ["./tsconfig.json"]
    },
    "plugins": ["@typescript-eslint", "sort-imports-es6-autofix", "import"],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
    ],
    "rules": {
        "@typescript-eslint/explicit-member-accessibility": ["error", { "accessibility": "no-public" }],
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/consistent-type-exports": "error",
        "@typescript-eslint/no-duplicate-enum-values": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": ["error", { "default": "array-simple" }],
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-confusing-void-expression": "error",
        "@typescript-eslint/no-redundant-type-constituents": "error",
        "accessor-pairs": "error",
        "array-callback-return": "error",
        "default-case-last": "error",
        "default-param-last": "error",
        "dot-notation": "error",
        "eqeqeq": "error",
        "grouped-accessor-pairs": "error",
        "max-classes-per-file": ["error", 1],
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-console": "off",
        "no-constructor-return": "error",
        "no-debugger": "warn",
        "import/no-duplicates": ["error", { "considerQueryString": true }],
        "no-else-return": ["error", { "allowElseIf": false }],
        "no-eq-null": "error",
        "no-eval": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-label": "error",
        "no-floating-decimal": "error",
        "no-implicit-coercion": "error",
        "no-implicit-globals": ["error", { "lexicalBindings": true }],
        "no-invalid-this": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-multi-spaces": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-wrappers": "error",
        "no-proto": "error",
        "no-redeclare": "error",
        "no-shadow": "off",
        "no-throw-literal": "error",
        "no-unreachable-loop": "error",
        "no-useless-call": "error",
        "no-useless-return": "error",
        "vars-on-top": "error",
        "sort-imports-es6-autofix/sort-imports-es6": [
            "error",
            {
                "ignoreCase": false,
                "ignoreMemberSort": false,
                "memberSyntaxSortOrder": ["none", "all", "multiple", "single"]
            }
        ],
        "brace-style": ["error", "1tbs", { "allowSingleLine": false }],

        "@typescript-eslint/naming-convention": [
            "warn",
            {
                "selector": "enumMember",
                "format": null,
                "custom": {
                    "regex": "^[A-Z_][0-9A-Za-z_]+$",
                    "match": true
                }
            }
        ],
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/no-shadow": ["error"],
        "class-methods-use-this": "warn",
        "consistent-return": "warn",
        "no-constant-condition": ["warn", { "checkLoops": false }],
        "@typescript-eslint/no-empty-function": "warn",

        "curly": ["error", "all"],

        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "no-fallthrough": "error",

        "@typescript-eslint/member-ordering": [
            "error",
            {
                "default": [
                    "private-static-field",
                    "protected-static-field",
                    "private-field",
                    "protected-field",
                    "public-field",
                    "public-constructor",
                    "protected-constructor",
                    "public-abstract-get",
                    "public-get",
                    "abstract-method",
                    "public-method",
                    "public-static-method",
                    "protected-abstract-get",
                    "protected-get",
                    "protected-method",
                    "protected-static-method",
                    "private-constructor",
                    "private-get",
                    "private-method",
                    "private-static-method"
                ]
            }
        ]
    },
    "overrides": [
        {
            "files": ["autobahn/*.ts"],
            "rules": {
                "no-console": "off"
            }
        }
    ]
}
